import eslintjs from "@eslint/js";
import globals from "globals";
import babelParser from "@babel/eslint-parser";

export default [
	eslintjs.configs.recommended,
	{
		languageOptions: {
			sourceType: "module",
			parser: babelParser,
			parserOptions: {
				requireConfigFile: false,
				babelOptions: {
					plugins: ["@babel/plugin-syntax-import-attributes"]
				}
				
			},
			globals: {
				...globals.node
			}
		},
		rules: {
			"no-await-in-loop": "error",
			"no-constructor-return": "error",
			"no-duplicate-imports": "warn",
			"no-inner-declarations": "error",
			"no-promise-executor-return": "error",
			"no-self-compare": "error",
			"no-template-curly-in-string": "warn",
			"no-unmodified-loop-condition": "warn",
			"no-unreachable-loop": "error",
			"no-useless-assignment": "warn",
			"require-atomic-updates": "warn",
			"accessor-pairs": ["error", { "getWithoutSet": true }],
			"block-scoped-var": "error",
			"camelcase": "error",
			"complexity": ["warn", { "max": 4 }],
			"curly": ["error", "multi-line"],
			"default-case": "error",
			"default-case-last": "error",
			"dot-notation": "error",
			"eqeqeq": "error",
			"func-style": ["error", "declaration", { "allowArrowFunctions": true }],
			"grouped-accessor-pairs": "error",
			"guard-for-in": "warn",
			"id-denylist": ["error"],
			"id-length": ["error", { "min": 2 }],
			"logical-assignment-operators": "warn",
			"max-classes-per-file": ["error", { "max": 1 }],
			"max-depth": ["error", { "max": 3 }],
			"max-lines-per-function": ["warn", { "max": 30, "skipBlankLines": true, "skipComments": true }],
			"max-nested-callbacks": ["warn", { "max": 5 }],
			"max-params": ["warn", { "max": 3 }],
			"max-statements": ["warn", { "max": 15 }],
			"new-cap": "error",
			"no-array-constructor": "error",
			"no-caller": "error",
			"no-else-return": "error",
			"no-eval": "warn",
			"no-extend-native": "error",
			"no-extra-bind": "warn",
			"no-extra-label": "error",
			"no-implicit-globals": "error",
			"no-implied-eval": "warn",
			"no-invalid-this": "error",
			"no-iterator": "error",
			"no-label-var": "error",
			"no-labels": "warn",
			"no-lone-blocks": "error",
			"no-lonely-if": "error",
			"no-loop-func": "error",
			"no-magic-numbers": ["warn"],
			"no-multi-assign": "error",
			"no-nested-ternary": "warn",
			"no-new": "error",
			"no-new-func": "error",
			"no-new-wrappers": "error",
			"no-object-constructor": "error",
			"no-octal-escape": "error",
			"no-param-reassign": "error",
			"no-proto": "error",
			"no-return-assign": "error",
			"no-sequences": "error",
			"no-throw-literal": "error",
			"no-underscore-dangle": "warn",
			"no-unneeded-ternary": "error",
			"no-useless-call": "error",
			"no-useless-computed-key": "error",
			"no-useless-concat": "error",
			"no-useless-constructor": "error",
			"no-useless-rename": "error",
			"no-useless-return": "error",
			"no-var": "error",
			"no-void": "warn",
			"prefer-arrow-callback": "error",
			"prefer-const": "warn",
			"prefer-object-has-own": "warn",
			"prefer-promise-reject-errors": "error",
			"prefer-regex-literals": "error",
			"prefer-rest-params": "error",
			"prefer-spread": "error",
			"prefer-object-spread": "error",
			"prefer-template": "error",
			"require-await": "error",
			"yoda": "error",


		}
	}
];
